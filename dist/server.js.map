{"version":3,"sources":["../server/server.js"],"names":["install","app","use","static","json","db","connect","then","client","listen","console","log","catch","error","get","req","res","filter","query","staff_code_type","staff_code_number","Number","nationality","name","obj","$search","$text","department","designation","collection","find","toArray","employees","metadata","total_count","length","_metadata","records","status","message","employeeID","params","id","staff_code","split","staffct","staffcn","limit","next","employee","$match","$project","aggregate","fleet","post","newEmployee","body","dob","Date","passport","issue_date","expiry_date","license","doj","dot","civil","visa","insertOne","result","findOne","_id","insertedId","query_result","count","new_employee","err","payroll","replaceOne","upsert","newVehicle","dop","registration","insurance","new_vehicle","username","password","user","token","sign","config","jwtSecret","errors","form","put","updateOne","$set","savedEmployee","delete","issueId","deleteOne","deleteResult","n","errror","sendFile","resolve"],"mappings":"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","file":"server.js","sourcesContent":["import express from 'express';                          //ES2015 \nimport bodyParser from 'body-parser';                   //ES2015 \nimport { MongoClient, ObjectId } from 'mongodb';                  //ES2015 \nimport Issue from './issue.js'                          //ES2015 \nimport 'babel-polyfill';\nimport SourceMapSupport from 'source-map-support';   //To let Node.js report line numbers by using source maps, we need to install thesource-map-support module, and also call the library in the application once\nSourceMapSupport.install();\nimport Validator from 'validator';\nimport bcrypt from 'bcrypt';\nimport jwt from 'jsonwebtoken';\nimport  qs from 'query-string';\nimport path from 'path';\nimport crypto from 'crypto';\nimport multer from 'multer';\nimport GridFsStorage  from 'multer-gridfs-storage';\nimport Grid  from 'gridfs-stream';\nimport methodOverride from 'method-override';\n\n\n// import config from './config';\n\nconst app = express();\n\napp.use(express.static('static'));\napp.use(bodyParser.json());\n\n\nlet db;\n\nMongoClient.connect('mongodb://localhost').then(client => {\n    db = client.db('merp');\n\n    app.listen(3000, () => {\n        console.log('App startedddddd on port 3000');\n    });\n}).catch(error => {\n    console.log('ERROR:', error);\n});\n\napp.get('/api/employees', (req,res) => {\n    const filter = {};\n    // console.log(req);\n    if (req.query.staff_code_type) filter.staff_code_type = req.query.staff_code_type;\n    if (req.query.staff_code_number){\n        filter.staff_code_number = req.query.staff_code_number;\n        filter.staff_code_number=Number(filter.staff_code_number)\n    }\n    if (req.query.nationality) filter.nationality = req.query.nationality;\n    if (req.query.name)\n    {  const obj = {\n        $search : req.query.name \n        }\n        filter.$text = obj\n    }\n    if (req.query.department) filter.department = req.query.department;\n    if (req.query.designation) filter.designation = req.query.designation;\n\n\n    // if(req.query.effort_lte || req.query.effort_gte) filter.effort = {};\n    // if(req.query.effort_lte)\n    //     filter.effort.$lte = parseInt(req.query.effort_lte, 10);\n    // if(req.query.effort_gte)\n    //     filter.effort.$gte = parseInt(req.query.effort_gte, 10)\n    // if(req.query.owner)\n    //     filter.owner = req.query.owner;\n\n     console.log(\"filter in mongofind\",filter);\n\n\n    db.collection('employees').find(filter).toArray().then( employees => {\n        const metadata = { total_count: employees.length };\n        res.json({ _metadata: metadata, records : employees})\n    }).catch(error =>{\n        console.log(error);\n        res.status(500).json({ message: `Internal Server Error: ${error}` });\n    });\n });\n\napp.get('/api/employees/editEmployee/:id', (req,res) =>{\n    // console.log(\"Staff code fob\", staff_code)\n\n        let employeeID = req.params.id;\n        let staff_code= employeeID.split('-');\n        let staffct= staff_code[0];//qs.stringify(staff_code[0]);\n        let staffcn= Number(staff_code[1]); //staff_code[1];\n        const query = {\n            \"staff_code_type\" : staffct,\n            \"staff_code_number\" : staffcn\n        }\n        console.log(\"Staff code type n number\", query)\n        // try {\n        //     issueId = new ObjectId(req.params.id);\n        // } catch (error){\n        //     res.status(422).json({ message: `Invalid issue ID format: ${error}` });\n        //     return;\n        // }\n        \n        db.collection('employees').find(query).limit(1)\n        .next()\n        .then( employee => { \n            if (!employee) res.status(404).json({ message: `No such issue: ${employeeID}` });\n            else res.json(employee);\n        })\n        .catch( error => {\n            console.log(error);\n            res.status(500).json({ message: `Internal Server Error: ${error}` });\n        });\n    });\n\n    app.get('/api/reports/renewals/', (req,res) => {\n\n        const filter = {};\n            // console.log(req);\n            if (req.query.staff_code_type) filter.staff_code_type = req.query.staff_code_type;\n            if (req.query.staff_code_number){\n                filter.staff_code_number = req.query.staff_code_number;\n                filter.staff_code_number=Number(filter.staff_code_number)\n            }\n            if (req.query.nationality) filter.nationality = req.query.nationality;\n            if (req.query.name)\n            {  const obj = {\n                $search : req.query.name \n                }\n                filter.$text = obj\n            }\n            if (req.query.department) filter.department = req.query.department;\n            if (req.query.designation) filter.designation = req.query.designation;\n\n             console.log(\"filter in mongofind\",filter);\n       \n        const query = [\n           {    $match : filter \n           },\n           {\n               $project:\n               { staff_code_type : 1, staff_code_number : 1, name : 1, \n                 \"civil.expiry_date\" : 1, \"visa.expiry_date\": 1, \"passport.expiry_date\" :1 ,\n                }\n            }\n       ]\n        db.collection('employees').aggregate(query).toArray().then( employees => {\n            const metadata = { total_count: employees.length };\n            res.json({ _metadata: metadata, records : employees})\n        }).catch(error =>{\n            console.log(error);\n            res.status(500).json({ message: `Internal Server Error: ${error}` });\n        });\n    })\n\n    app.get('/api/reports/leave/', (req,res) => {\n\n        const filter = {};\n            // console.log(req);\n            if (req.query.staff_code_type) filter.staff_code_type = req.query.staff_code_type;\n            if (req.query.staff_code_number){\n                filter.staff_code_number = req.query.staff_code_number;\n                filter.staff_code_number=Number(filter.staff_code_number)\n            }\n            if (req.query.nationality) filter.nationality = req.query.nationality;\n            if (req.query.name)\n            {  const obj = {\n                $search : req.query.name \n                }\n                filter.$text = obj\n            }\n            if (req.query.department) filter.department = req.query.department;\n            if (req.query.designation) filter.designation = req.query.designation;\n\n             console.log(\"filter in mongofind\",filter);\n       \n\n        db.collection('employees').find(filter).toArray().then( employees => {\n            const metadata = { total_count: employees.length };\n            res.json({ _metadata: metadata, records : employees})\n        }).catch(error =>{\n            console.log(error);\n            res.status(500).json({ message: `Internal Server Error: ${error}` });\n        });\n    })\n\n\n\n    app.get('/api/reports/payroll', (req,res) => {  \n\n        const filter = {};\n            // console.log(req);\n            if (req.query.staff_code_type) filter.staff_code_type = req.query.staff_code_type;\n            if (req.query.staff_code_number){\n                filter.staff_code_number = req.query.staff_code_number;\n                filter.staff_code_number=Number(filter.staff_code_number)\n            }\n            if (req.query.nationality) filter.nationality = req.query.nationality;\n            if (req.query.name)\n            {  const obj = {\n                $search : req.query.name \n                }\n                filter.$text = obj\n            }\n            if (req.query.department) filter.department = req.query.department;\n            if (req.query.designation) filter.designation = req.query.designation;\n\n             console.log(\"filter in mongofind\",filter);\n       \n    \n        db.collection('payroll').find(filter).toArray().then( employees => {\n            const metadata = { total_count: employees.length };\n            res.json({ _metadata: metadata, records : employees})\n        }).catch(error =>{\n            console.log(error);\n            res.status(500).json({ message: `Internal Server Error: ${error}` });\n        });\n     });\n\n     app.get('/api/fleet', (req,res) => {  \n    \n        db.collection('fleet').find().toArray().then( fleet => {\n            const metadata = { total_count: fleet.length };\n            res.json({ _metadata: metadata, records : fleet})\n        }).catch(error =>{\n            console.log(error);\n            res.status(500).json({ message: `Internal Server Error: ${error}` });\n        });\n     });\n    \napp.get('/api/employee_add', (req,res) => {  \n\ndb.collection('employees').find().toArray().then( employees => {\n    const metadata = { total_count: employees.length };\n    res.json({ _metadata: metadata, records : employees})\n}).catch(error =>{\n    console.log(error);\n    res.status(500).json({ message: `Internal Server Error: ${error}` });\n});\n});\n    \napp.post('/api/employee_add',(req,res) => {\n    const newEmployee = req.body;\n    // console.log(\"Request body\",req.file);\n\n    if(newEmployee.dob){\n       newEmployee.dob= new Date(newEmployee.dob);\n   }\n   if(newEmployee.passport.issue_date){\n    newEmployee.passport.issue_date= new Date(newEmployee.passport.issue_date);\n    }\n    if(newEmployee.passport.expiry_date){\n    newEmployee.passport.expiry_date= new Date(newEmployee.passport.expiry_date);\n    }\n    if(newEmployee.license.issue_date){\n        newEmployee.license.issue_date= new Date(newEmployee.license.issue_date);\n    }\n    if(newEmployee.license.expiry_date){\n        newEmployee.license.expiry_date= new Date(newEmployee.license.expiry_date);\n    }\n   if(newEmployee.doj){\n    newEmployee.doj= new Date(newEmployee.doj);\n    }\n\n    if(newEmployee.dot){\n        newEmployee.dot= new Date(newEmployee.dot);\n        }\n\n    if(newEmployee.civil.issue_date){\n        newEmployee.civil.issue_date= new Date(newEmployee.civil.issue_date);\n    }\n    if(newEmployee.civil.expiry_date){\n        newEmployee.civil.expiry_date= new Date(newEmployee.civil.expiry_date);\n    }\n    if(newEmployee.visa.issue_date){\n        newEmployee.visa.issue_date= new Date(newEmployee.visa.issue_date);\n    }\n    if(newEmployee.visa.expiry_date){\n        newEmployee.visa.expiry_date= new Date(newEmployee.visa.expiry_date);\n    }\n\n    console.log(\"New employee before inserting in db \", newEmployee)\n\n    db.collection('employees').insertOne(newEmployee).then( result => \n        db.collection('employees').findOne({ _id: result.insertedId })).then( query_result => \n            db.collection('employees').count().then( metadata => \n                res.json({ _metadata: metadata , new_employee : query_result})        \n            )        \n        ).catch(err =>{\n        console.log(err);\n        res.status(500).json({ message: `Internal Server Error: ${err}` });\n    });\n});\n\napp.post('/api/reports/payroll_edit',(req,res) => {\n    const payroll = req.body;\n    // console.log(\"Request body\",req.file);\n\n   if(payroll.doj){\n        payroll.doj= new Date(payroll.doj);\n    }\n\n    console.log(\"New employee before inserting in db \", payroll)\n    let collection = 'payroll'\n    db.collection(collection).replaceOne({ staff_code_type : payroll.staff_code_type, staff_code_number : payroll.staff_code_number},payroll,{upsert:true}).then( result => \n        db.collection(collection).findOne({ _id: result.insertedId })).then( query_result => \n            db.collection(collection).count().then( metadata => \n                res.json({ _metadata: metadata , payroll : query_result})        \n            )        \n        ).catch(err =>{\n        console.log(err);\n        res.status(500).json({ message: `Internal Server Error: ${err}` });\n    });\n});\n\napp.post('/api/fleet/addVehicle',(req,res) => {\n    const newVehicle = req.body;\n    // console.log(\"Request body\",req.file);\n\n    if(newVehicle.dop){\n       newVehicle.dop= new Date(newVehicle.dob);\n   }\n   if(newVehicle.registration.issue_date){\n    newVehicle.registration.issue_date= new Date(newVehicle.registration.issue_date);\n    }\n    if(newVehicle.registration.expiry_date){\n    newVehicle.registration.expiry_date= new Date(newVehicle.registration.expiry_date);\n    }\n  \n    if(newVehicle.insurance.issue_date){\n        newVehicle.insurance.issue_date= new Date(newVehicle.insurance.issue_date);\n    }\n    if(newVehicle.insurance.expiry_date){\n        newVehicle.insurance.expiry_date= new Date(newVehicle.insurance.expiry_date);\n    }\n\n    // console.log(\"New employee before inserting in db \", newEmployee)\n\n    db.collection('fleet').insertOne(newVehicle).then( result => \n        db.collection('fleet').findOne({ _id: result.insertedId })).then( query_result => \n            db.collection('fleet').count().then( metadata => \n                res.json({ _metadata: metadata , new_vehicle : query_result})        \n            )        \n        ).catch(err =>{\n        console.log(err);\n        res.status(500).json({ message: `Internal Server Error: ${err}` });\n    });\n});\n\napp.post('/api/auth', (req,res) => {\n    \n    const { username , password } = req.body;\n\n    db.collection('login').find({ username : username}).then( user =>{\n            if (user) {\n                if( password === user.password){\n                    const token = jwt.sign({\n                        id : user._id,\n                        username: user.username\n                    }, config.jwtSecret);\n                    res.json({ token })\n                } else {\n                    res.status(401).json({ errors: { form: 'Invalid Credentials' } });\n                }\n            }\n            else {\n                res.status(401).json({ errors: { form: 'Invalid Credentials' } });\n            }\n\n        });\n});\n\n\napp.put('/api/employees/editEmployee/:id', (req, res) => {\n//   let issueId;\n//   try {\n//     issueId = new ObjectId(req.params.id);\n//   } catch (error) {\n//     res.status(422).json({ message: `Invalid issue ID format: ${error}` });\n//     return;\n//   }\nlet employeeID = req.params.id;\n        let staff_code= employeeID.split('-');\n        let staffct= staff_code[0];//qs.stringify(staff_code[0]);\n        let staffcn= Number(staff_code[1]); //staff_code[1];\n        const query = {\n            \"staff_code_type\" : staffct,\n            \"staff_code_number\" : staffcn\n        }\n  const newEmployee = req.body;\n     delete newEmployee._id;\n//   console.log(\"issueId =>\",issueId);\n\n//   console.log(\"issue =>\",issue);\n\n\n//   const err = Issue.validateIssue(issue);\n//   if (err) {\n//     res.status(422).json({ message: `Invalid request: ${err}` });\n//     return;\n//   }\nif(newEmployee.dob){\n    newEmployee.dob= new Date(newEmployee.dob);\n}\nif(newEmployee.doj){\n newEmployee.doj= new Date(newEmployee.doj);\n }\n\n if(newEmployee.dot){\n     newEmployee.dot= new Date(newEmployee.dot);\n     }\n\n if(newEmployee.civil.issue_date){\n     newEmployee.civil.issue_date= new Date(newEmployee.civil.issue_date);\n }\n if(newEmployee.civil.expiry_date){\n     newEmployee.civil.expiry_date= new Date(newEmployee.civil.expiry_date);\n }\n if(newEmployee.visa.issue_date){\n     newEmployee.visa.issue_date= new Date(newEmployee.visa.issue_date);\n }\n if(newEmployee.visa.expiry_date){\n     newEmployee.visa.expiry_date= new Date(newEmployee.visa.expiry_date);\n }\n\n console.log(\"EMPLOYEE UPDATE in db \", newEmployee)\n\n  db.collection('employees').updateOne(query, { $set : newEmployee}).then(() =>\n    db.collection('employees').find({ query }).limit(1)\n    .next()\n  )\n  .then(savedEmployee => {\n    res.json(savedEmployee);\n  })\n  .catch(error => {\n    console.log(error);\n    res.status(500).json({ message: `Internal Server Error: ${error}` });\n  });\n});\n\napp.delete('/api/issues/:id', (req,res) => {\n    let issueId;\ntry{\n    issueId = new ObjectId(req.params.id);\n}\ncatch (error){\n    res.status(422).json({ message : `Invalid issue ID format: ${error}`});\n    return;\n}\n    \n    db.collection('issues').deleteOne({ _id : issueId }).then( deleteResult => {\n        if(deleteResult.result.n === 1) res.json({ status: 'OK'});\n        else res.json({ status: 'Warning: object not found' });\n    })\n    .catch( error => {\n        console.log(error);\n        res.status(500).json({ message : `Internal Server Error: ${errror}` });\n    });\n});\n\napp.get('*', (req, res) => {\n    res.sendFile(path.resolve('static/index.html'));\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// app.listen(3000, function(){\n//     console.log('App started on port 3000');\n// });\n\n// function validateIssue(issue) {\n//     for(const field in issue ){\n//         const type = issueFieldType[field];\n//     if(!type) {\n//         delete issue[field];\n//     } else if ( type == 'required' && !issue[field]){\n//         return `${field} is required.`;\n//     }\n// }\n\n// if(!validIssueStatus[issue.status])\n//     return `${issue.status} is not a valid status.`;\n\n// return null;\n\n// }"]}