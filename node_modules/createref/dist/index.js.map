{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;AAiBA;IACE,IAAM,GAAG,GAAmB,UAAC,UAA2B;QAA3B,2BAAA,EAAA,iBAA2B;QACtD,GAAG,CAAC,OAAO,GAAG,UAAU,CAAC;IAC3B,CAAC,CAAC;IAEF,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC;IAGnB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAEjB,OAAO,GAAG,CAAC;AACb,CAAC;AAXD,4BAWC","sourcesContent":["// This is a simple utility which emulates the React.createRef() function\n// available in React 16.3.\n// It allows callback refs to be created in an easier, more erognomic way with\n// less boilerplate code.\n// See https://reactjs.org/docs/refs-and-the-dom.html#creating-refs\n\n// NOTE: this isn't the actual implemenation but rather an API compatible\n//       version which creates a callback ref and can be used in the same way.\nimport * as React from 'react';\n\nexport type RefElement = React.Component | HTMLElement | null;\n\nexport interface IRef<E extends RefElement> {\n  (element: E): void;\n  current?: E;\n}\n\nexport default function createRef<E extends RefElement>() {\n  const ref: IRef<E | null> = (refElement: E | null = null) => {\n    ref.current = refElement;\n  };\n\n  ref.current = null;\n\n  // seal the object to prevent any extra properties from being added\n  Object.seal(ref);\n\n  return ref;\n}\n"]}